apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ${APP_NAME}
  name: ${APP_NAME}
  namespace: ${PROFILE}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: ${APP_NAME}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ${APP_NAME}
    spec:
      containers:
        - command:
            - java
            - '-javaagent:/mnt/sw-agent/skywalking-agent.jar'
            - '-Dskywalking.agent.service_name=gateway-${PROFILE}'
            - '-Dskywalking.collector.backend_service=192.168.50.112:11800'
            - '-server'
            - '-jar'
            - /gateway.jar
          args:
            - '--spring.profiles.active=${PROFILE}'
            - '--spring.cloud.nacos.config.namespace=${PROFILE}'
            - '--spring.cloud.nacos.discovery.namespace=${PROFILE}'
          env:
            - name: aliyun_logs_logstore
              value: /home/admin/app/${SERVICE_NAME}/*
          image: >-
            ${IMAGE}
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1

          readinessProbe:
            failureThreshold: 100
            httpGet:
                path: /actuator
                port: 8080
                scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          startupProbe:
            failureThreshold: 100
            httpGet:
              path: /actuator
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1

          name: ${APP_NAME}
          volumeMounts:
            - mountPath: /etc/localtime
              name: volume-localtime
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - hostPath:
            path: /etc/localtime
            type: ''
          name: volume-localtime
